unit libAsapStatic;

interface

uses
  SysUtils;



type
  PASAP = Pointer;
  PASAPInfo = Pointer;
  PASAPWriter = Pointer;

  ASAPSampleFormat = (
    ASAPSampleFormat_U8 = 0,
    ASAPSampleFormat_S16_L_E = 1,
    ASAPSampleFormat_S16_B_E = 2
  );

const
  ASAP_SAMPLE_RATE = 44100;
  ASAPInfo_VERSION_MAJOR = 6;
  ASAPInfo_VERSION_MINOR = 0;
  ASAPInfo_VERSION_MICRO = 3;
  ASAPInfo_VERSION = '6.0.3';
  ASAPInfo_YEARS = '2005-2025';
  ASAPInfo_CREDITS = 'Another Slight Atari Player (C) 2005-2025 Piotr Fusik'#10+
                     'CMC, MPT, TMC, TM2 players (C) 1994-2005 Marcin Lewandowski'#10+
                     'RMT player (C) 2002-2005 Radek Sterba'#10+
                     'DLT player (C) 2009 Marek Konopka'#10+
                     'CMS player (C) 1999 David Spilka'#10+
                     'FC player (C) 2011 Jerzy Kut'#10;
  ASAPInfo_COPYRIGHT = 'This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.';
  ASAPInfo_MAX_MODULE_LENGTH = 65000;
  ASAPInfo_MAX_TEXT_LENGTH = 127;
  ASAPInfo_MAX_SONGS = 32;
  ASAPWriter_MAX_SAVE_EXTS = 3;
  ASAPWriter_MAX_DURATION_LENGTH = 9;

// ASAP functions
function ASAP_New: PASAP; cdecl; external ASAP_DLL name 'ASAP_New';
procedure ASAP_Delete(self: PASAP); cdecl; external ASAP_DLL name 'ASAP_Delete';
function ASAP_GetSampleRate(const self: PASAP): Integer; cdecl; external ASAP_DLL name 'ASAP_GetSampleRate';
procedure ASAP_SetSampleRate(self: PASAP; sampleRate: Integer); cdecl; external ASAP_DLL name 'ASAP_SetSampleRate';
procedure ASAP_DetectSilence(self: PASAP; seconds: Integer); cdecl; external ASAP_DLL name 'ASAP_DetectSilence';
function ASAP_Load(self: PASAP; filename: PAnsiChar; const module: PByte; moduleLen: Integer): Boolean; cdecl; external ASAP_DLL name 'ASAP_Load';
function ASAP_GetInfo(const self: PASAP): PASAPInfo; cdecl; external ASAP_DLL name 'ASAP_GetInfo';
procedure ASAP_MutePokeyChannels(self: PASAP; mask: Integer); cdecl; external ASAP_DLL name 'ASAP_MutePokeyChannels';
function ASAP_PlaySong(self: PASAP; song: Integer; duration: Integer): Boolean; cdecl; external ASAP_DLL name 'ASAP_PlaySong';
function ASAP_GetBlocksPlayed(const self: PASAP): Integer; cdecl; external ASAP_DLL name 'ASAP_GetBlocksPlayed';
function ASAP_GetPosition(const self: PASAP): Integer; cdecl; external ASAP_DLL name 'ASAP_GetPosition';
function ASAP_SeekSample(self: PASAP; block: Integer): Boolean; cdecl; external ASAP_DLL name 'ASAP_SeekSample';
function ASAP_Seek(self: PASAP; position: Integer): Boolean; cdecl; external ASAP_DLL name 'ASAP_Seek';
function ASAP_GetWavHeader(self: PASAP; buffer: PByte; format: ASAPSampleFormat; metadata: Boolean): Integer; cdecl; external ASAP_DLL name 'ASAP_GetWavHeader';
function ASAP_Generate(self: PASAP; buffer: PByte; bufferLen: Integer; format: ASAPSampleFormat): Integer; cdecl; external ASAP_DLL name 'ASAP_Generate';
function ASAP_GetPokeyChannelVolume(const self: PASAP; channel: Integer): Integer; cdecl; external ASAP_DLL name 'ASAP_GetPokeyChannelVolume';

// ASAPInfo functions
function ASAPInfo_New: PASAPInfo; cdecl; external ASAP_DLL name 'ASAPInfo_New';
procedure ASAPInfo_Delete(self: PASAPInfo); cdecl; external ASAP_DLL name 'ASAPInfo_Delete';
function ASAPInfo_ParseDuration(s: PAnsiChar): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_ParseDuration';
function ASAPInfo_IsOurFile(filename: PAnsiChar): Boolean; cdecl; external ASAP_DLL name 'ASAPInfo_IsOurFile';
function ASAPInfo_IsOurExt(ext: PAnsiChar): Boolean; cdecl; external ASAP_DLL name 'ASAPInfo_IsOurExt';
function ASAPInfo_Load(self: PASAPInfo; filename: PAnsiChar; const module: PByte; moduleLen: Integer): Boolean; cdecl; external ASAP_DLL name 'ASAPInfo_Load';
function ASAPInfo_GetAuthor(const self: PASAPInfo): PAnsiChar; cdecl; external ASAP_DLL name 'ASAPInfo_GetAuthor';
function ASAPInfo_SetAuthor(self: PASAPInfo; value: PAnsiChar): Boolean; cdecl; external ASAP_DLL name 'ASAPInfo_SetAuthor';
function ASAPInfo_GetTitle(const self: PASAPInfo): PAnsiChar; cdecl; external ASAP_DLL name 'ASAPInfo_GetTitle';
function ASAPInfo_SetTitle(self: PASAPInfo; value: PAnsiChar): Boolean; cdecl; external ASAP_DLL name 'ASAPInfo_SetTitle';
function ASAPInfo_GetTitleOrFilename(const self: PASAPInfo): PAnsiChar; cdecl; external ASAP_DLL name 'ASAPInfo_GetTitleOrFilename';
function ASAPInfo_GetDate(const self: PASAPInfo): PAnsiChar; cdecl; external ASAP_DLL name 'ASAPInfo_GetDate';
function ASAPInfo_SetDate(self: PASAPInfo; value: PAnsiChar): Boolean; cdecl; external ASAP_DLL name 'ASAPInfo_SetDate';
function ASAPInfo_GetYear(const self: PASAPInfo): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_GetYear';
function ASAPInfo_GetMonth(const self: PASAPInfo): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_GetMonth';
function ASAPInfo_GetDayOfMonth(const self: PASAPInfo): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_GetDayOfMonth';
function ASAPInfo_GetChannels(const self: PASAPInfo): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_GetChannels';
function ASAPInfo_GetSongs(const self: PASAPInfo): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_GetSongs';
function ASAPInfo_GetDefaultSong(const self: PASAPInfo): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_GetDefaultSong';
function ASAPInfo_SetDefaultSong(self: PASAPInfo; song: Integer): Boolean; cdecl; external ASAP_DLL name 'ASAPInfo_SetDefaultSong';
function ASAPInfo_GetDuration(const self: PASAPInfo; song: Integer): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_GetDuration';
function ASAPInfo_SetDuration(self: PASAPInfo; song: Integer; duration: Integer): Boolean; cdecl; external ASAP_DLL name 'ASAPInfo_SetDuration';
function ASAPInfo_GetLoop(const self: PASAPInfo; song: Integer): Boolean; cdecl; external ASAP_DLL name 'ASAPInfo_GetLoop';
function ASAPInfo_SetLoop(self: PASAPInfo; song: Integer; loop: Boolean): Boolean; cdecl; external ASAP_DLL name 'ASAPInfo_SetLoop';
function ASAPInfo_IsNtsc(const self: PASAPInfo): Boolean; cdecl; external ASAP_DLL name 'ASAPInfo_IsNtsc';
function ASAPInfo_CanSetNtsc(const self: PASAPInfo): Boolean; cdecl; external ASAP_DLL name 'ASAPInfo_CanSetNtsc';
procedure ASAPInfo_SetNtsc(self: PASAPInfo; ntsc: Boolean); cdecl; external ASAP_DLL name 'ASAPInfo_SetNtsc';
function ASAPInfo_GetTypeLetter(const self: PASAPInfo): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_GetTypeLetter';
function ASAPInfo_GetPlayerRateScanlines(const self: PASAPInfo): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_GetPlayerRateScanlines';
function ASAPInfo_GetPlayerRateHz(const self: PASAPInfo): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_GetPlayerRateHz';
function ASAPInfo_GetMusicAddress(const self: PASAPInfo): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_GetMusicAddress';
function ASAPInfo_SetMusicAddress(self: PASAPInfo; address: Integer): Boolean; cdecl; external ASAP_DLL name 'ASAPInfo_SetMusicAddress';
function ASAPInfo_GetInitAddress(const self: PASAPInfo): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_GetInitAddress';
function ASAPInfo_GetPlayerAddress(const self: PASAPInfo): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_GetPlayerAddress';
function ASAPInfo_GetCovoxAddress(const self: PASAPInfo): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_GetCovoxAddress';
function ASAPInfo_GetSapHeaderLength(const self: PASAPInfo): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_GetSapHeaderLength';
function ASAPInfo_GetInstrumentNamesOffset(const self: PASAPInfo; const module: PByte; moduleLen: Integer): Integer; cdecl; external ASAP_DLL name 'ASAPInfo_GetInstrumentNamesOffset';
function ASAPInfo_GetExtDescription(ext: PAnsiChar): PAnsiChar; cdecl; external ASAP_DLL name 'ASAPInfo_GetExtDescription';
function ASAPInfo_GetOriginalModuleExt(const self: PASAPInfo; const module: PByte; moduleLen: Integer): PAnsiChar; cdecl; external ASAP_DLL name 'ASAPInfo_GetOriginalModuleExt';

// ASAPWriter functions
function ASAPWriter_New: PASAPWriter; cdecl; external ASAP_DLL name 'ASAPWriter_New';
procedure ASAPWriter_Delete(self: PASAPWriter); cdecl; external ASAP_DLL name 'ASAPWriter_Delete';
function ASAPWriter_GetSaveExts(exts: PPAnsiChar; const info: PASAPInfo; const module: PByte; moduleLen: Integer): Integer; cdecl; external ASAP_DLL name 'ASAPWriter_GetSaveExts';
function ASAPWriter_DurationToString(result: PByte; value: Integer): Integer; cdecl; external ASAP_DLL name 'ASAPWriter_DurationToString';
procedure ASAPWriter_SetOutput(self: PASAPWriter; output: PByte; startIndex: Integer; endIndex: Integer); cdecl; external ASAP_DLL name 'ASAPWriter_SetOutput';
function ASAPWriter_Write(self: PASAPWriter; targetFilename: PAnsiChar; const info: PASAPInfo; const module: PByte; moduleLen: Integer; tag: Boolean): Integer; cdecl; external ASAP_DLL name 'ASAPWriter_Write';


implementation
{$LINKLIB m}
{$LINKLIB libasap.a} // Подключение статической библиотеки libasap.a

end.
